// Mocks generated by Mockito 5.4.2 from annotations
// in flutter_mobx_shopping_list_app/test/ui/home/home_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_mobx_shopping_list_app/domain/entities/shopping_item_entity.dart'
    as _i4;
import 'package:flutter_mobx_shopping_list_app/ui/home/home_page_controller.dart'
    as _i3;
import 'package:mobx/mobx.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeObservableList_0<T> extends _i1.SmartFake
    implements _i2.ObservableList<T> {
  _FakeObservableList_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeReactiveContext_1 extends _i1.SmartFake
    implements _i2.ReactiveContext {
  _FakeReactiveContext_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [HomePageController].
///
/// See the documentation for Mockito's code generation for more information.
class MockHomePageController extends _i1.Mock
    implements _i3.HomePageController {
  @override
  _i2.ObservableList<_i4.ShoppingItemEntity> get items => (super.noSuchMethod(
        Invocation.getter(#items),
        returnValue: _FakeObservableList_0<_i4.ShoppingItemEntity>(
          this,
          Invocation.getter(#items),
        ),
        returnValueForMissingStub:
            _FakeObservableList_0<_i4.ShoppingItemEntity>(
          this,
          Invocation.getter(#items),
        ),
      ) as _i2.ObservableList<_i4.ShoppingItemEntity>);
  @override
  set items(_i2.ObservableList<_i4.ShoppingItemEntity>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #items,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.ObservableList<_i4.ShoppingItemEntity> get selected =>
      (super.noSuchMethod(
        Invocation.getter(#selected),
        returnValue: _FakeObservableList_0<_i4.ShoppingItemEntity>(
          this,
          Invocation.getter(#selected),
        ),
        returnValueForMissingStub:
            _FakeObservableList_0<_i4.ShoppingItemEntity>(
          this,
          Invocation.getter(#selected),
        ),
      ) as _i2.ObservableList<_i4.ShoppingItemEntity>);
  @override
  set selected(_i2.ObservableList<_i4.ShoppingItemEntity>? value) =>
      super.noSuchMethod(
        Invocation.setter(
          #selected,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get multipleSelect => (super.noSuchMethod(
        Invocation.getter(#multipleSelect),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  set multipleSelect(bool? value) => super.noSuchMethod(
        Invocation.setter(
          #multipleSelect,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.ReactiveContext get context => (super.noSuchMethod(
        Invocation.getter(#context),
        returnValue: _FakeReactiveContext_1(
          this,
          Invocation.getter(#context),
        ),
        returnValueForMissingStub: _FakeReactiveContext_1(
          this,
          Invocation.getter(#context),
        ),
      ) as _i2.ReactiveContext);
  @override
  bool get loading => (super.noSuchMethod(
        Invocation.getter(#loading),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get hasError => (super.noSuchMethod(
        Invocation.getter(#hasError),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  bool get hasNetworkError => (super.noSuchMethod(
        Invocation.getter(#hasNetworkError),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
  @override
  _i5.Future<void> getShoppingItems() => (super.noSuchMethod(
        Invocation.method(
          #getShoppingItems,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void selectItem(
    bool? value,
    _i4.ShoppingItemEntity? item,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #selectItem,
          [
            value,
            item,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<void> deleteSelectedShoppingItems() => (super.noSuchMethod(
        Invocation.method(
          #deleteSelectedShoppingItems,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  _i5.Future<void> toggle(_i4.ShoppingItemEntity? item) => (super.noSuchMethod(
        Invocation.method(
          #toggle,
          [item],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
